C++ version of NHB code. 
This will be followed by a Julia version, perhaps developed in class this Spring. 
----------------------------------------------------------------------
2020-12-19
- Allow for floating dt for higher accuracy. 
  It is not clear how small dt must be to get accuracy to within 5%. 
  Approximating 1-exp(-beta*dt) by beta*dt is one source of approximation, 
  but is not clear whether the exponential form leads to errors and this must be tested. 

2020-12-24,5.17pm
- Add plots of R (individual Reproduction number) as a function of time in stats.py

--------------------------------------------
260 people initially infected. 
Random vaccination of susceptible people. 

1 vaccination daily 
No vaccinations (85): 
nb recovered: 189531

100 vaccinations daily: 
nb recovered: 188609
nb vaccinations: 7000 (almost no effect)

1000 vaccinations daily: 
total number recovered:  180754 (70% of pop)
total number vacc 1:  70752 (27% of pop)

10000 vaccinations daily: 
total number recovered:  108747 (41% of pop)
total number vacc 1:  151795 (58% of population)
Execution time 6 seconds

20000 vaccinations daily: 
total number recovered:  51159 (20% of pop)
nb vaccinated_1: 209383 (80% of pop)
Execution time 6 seconds

So to be more realistic, I should make vaccines 70% effective (regarding transmission rate), and allocate the second dose a fixe time after the first dose, and make the second dose 95% effective. For now, every iteration, I allocate a number of vaccines specified by a Poisson distribution with a mean set to a mean rate that is input into the parameters_0.txt file.
----------------------------------------------------------------------
2021-01-02,8.30pm
Implemented Vaccines. Give vaccine at a fixed rate over time. 1st dose, 2nd dose. 
For now, effect is 100%. 2nd dose has no effect. V1 state has no transmissibility. V1 state is equivalent to 
recovered state. 

What is \beta and what is \gamma. 
\beta is transmissibility (infectiousness). It affects the degree to which I can transmit the disease to 
somebody else. The vaccine will decrease \beta. Will make me less infectuous. That would decrease \beta. Thus, 
the probability of infecting somebody else is decreased. 
The vaccine will also make me less likely to catch the disease by boosting my immune system. That means that each 
person should have an "antigen" parameter in [0,1]. 
----------------------------------------------------------------------
More realistic simulation of vaccines: simply reduce transmissibility of vaccine.
If a vaccine if 50% effective, that would mean that beta is divided by two. 
If a vaccine if 95% effect, that would mean that beta is what? 
----------------------------------------------------------------------
2021-01-03,9.42am
Improved on inputting data (read parameter files). Created functions getFloat() and getInt(). 
This allows me to add a comment to lines in the file. 
----------------------------------------------------------------------
2021-01-06
0/day,     tot IS: 189765
10000/day, tot IS: 165179, c1=0.99
20000/day, tot IS: 122910, c1=0.99
25000/day, tot IS:  86274, c1=0.99
25000/day, tot IS: 117782, c1=0.90
25000/day, tot IS: 121286, c1=0.85
25000/day, tot IS: 151862, c1=0.70

I vaccinate n_vacc1 per day (dose 1 with efficacy c1). Beta ->
beta*(1-c1). Dose 2 has efficacy c2). Beta -> beta*(1-c2).
Recovery time is not impacted. In reality, recovery time should probably
be reduced (so infectuosity is reduced).
----------------------------------------------------------------------
Use of handles for fancy legends in read_data.py
----------------------------------------------------------------------
data_ge/run004/: epsilon_S-1=0.1 days, dt_btw_vac=28days, effectively: 0.6/0.95
data_ge/run005/: epsilon_S-1=3.0 days, dt_btw_vac=28days, effectively: 0.6/0.95
----------------------------------------------------------------------
2021-01-10,6.37pm
I need to collect data from my output file. 
----------------------------------------------------------------------
2021-01-10,9.23pm
There must be an error since my code tells me the entire population was vaccinated. 
----------------------------------------------------------------------
----------------------------------------------------------------------
----------------------------------------------------------------------
----------------------------------------------------------------------
----------------------------------------------------------------------
